/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2021-05-06 05:47:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class js003_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<title>제어문(if, for, while, switch case, do while)</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\tfunction fn_sample1() {\r\n");
      out.write("\t\t\tvar money = prompt(\"지갑에 있는 돈을 알려주세요.\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(money > 5000) {\r\n");
      out.write("\t\t\t\talert('엄청 부자시네요.');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if(money > 3000) {\r\n");
      out.write("\t\t\t\talert('조금 부자시네요.');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//fn_sample1();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction fn_sample2() {\r\n");
      out.write("\t\t\tfor(var i = 1; i <= 10; i++) {\r\n");
      out.write("\t\t\t\tdocument.write(i + \"<br/>\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//fn_sample2();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction fn_sample3() {\t\r\n");
      out.write("\t\t\tfor(var i = 1; i <= 10; i++) {\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(i == 4) {\r\n");
      out.write("\t\t\t\t\tcontinue;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(i == 8) {\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tdocument.write(i + \"<br/>\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//fn_sample3();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\t\t예제) 구구단을 출력해보세요. (2단 ~ 9단까지), 각 단 사이에는 한줄씩 비워주세요.\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction example() {\r\n");
      out.write("\t\t\tfor(var i = 2; i < 10; i++) {\r\n");
      out.write("\t\t\t\tdocument.write(i + \"단<br/>\");\r\n");
      out.write("\t\t\t\tfor(var j = 1; j < 10; j++) {\r\n");
      out.write("\t\t\t\t\tdocument.write(i + \" x \" + j + \" = \" + i * j + \"<br/>\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tdocument.write(\"<br/>\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t//example();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t/* \r\n");
      out.write("\t\t\t예제) prompt를 활용해 입력받은 단수의 구구단을 출력해 주세요. \r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction example2() {\r\n");
      out.write("\t\t\tvar num = prompt(\"출력할 구구단의 단을 입력하세요.\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.write(num + \"단<br/>\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i = 1; i < 10; i++) {\r\n");
      out.write("\t\t\t\tdocument.write(num + \" x \" + i + \" = \" + num * i + \"<br/>\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//example2();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction sample4(grade) {\r\n");
      out.write("\t\t\tswitch(grade) {\r\n");
      out.write("\t\t\t\tcase 1:\r\n");
      out.write("\t\t\t\t\talert(\"1학년이시네요.\");\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\tcase 2:\r\n");
      out.write("\t\t\t\t\talert(\"2학년이시네요.\");\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\tdefault:\r\n");
      out.write("\t\t\t\t\talert(\"모르겠어요.\");\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//sample4(2);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* \r\n");
      out.write("\t\t\t예제) '네이버, 다음, 구글 중 즐겨쓰는 포털사이트는?' prompt에서 값을 입력받아 해당되는 사이트로 이동시켜 주세요. \r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction example3() {\r\n");
      out.write("\t\t\tvar portal = prompt(\"네이버, 다음, 구글 중 즐겨쓰는 포털사이트는?\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tswitch(portal) {\r\n");
      out.write("\t\t\t\tcase 'naver', '네이버':\r\n");
      out.write("\t\t\t\t\tlocation.href = \"https://www.naver.com\";\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\tcase 'daum', '다음':\r\n");
      out.write("\t\t\t\t\tlocation.href = \"https://www.daum.net\";\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\tcase 'google', '구글':\r\n");
      out.write("\t\t\t\t\tlocation.href = \"https://www.google.com\";\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t\tdefault:\r\n");
      out.write("\t\t\t\t\talert(\"잘못된 입력입니다.\");\r\n");
      out.write("\t\t\t\t\tbreak;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//example3();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction sample5() {\r\n");
      out.write("\t\t\tvar i = 1;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\twhile(i <= 10) {\r\n");
      out.write("\t\t\t\tdocument.write(i + \"<br/>\");\r\n");
      out.write("\t\t\t\ti++;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tsample5();\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
